.evaluator-container {
  padding: 0;
  max-width: 100%;
  min-height: calc(100vh - 8rem);
}

.evaluator-header {
  text-align: center;
  margin-bottom: 2rem;
  
  h1 {
    color: var(--text-color);
    margin: 0 0 0.5rem 0;
    font-weight: 700;
  }
  
  p {
    color: var(--text-color-secondary);
    margin: 0;
    font-size: 1rem;
  }
}

// Recording Container
.recording-container {
  background: var(--primary-50);
  border-color: var(--primary-200);
  
  :host-context(.app-dark) & {
    background: rgba(var(--primary-500-rgb), 0.1);
    border-color: rgba(var(--primary-500-rgb), 0.3);
  }
}

// Sample Questions
.sample-question {
  background: var(--surface-hover);
  transition: all 0.3s ease;
  cursor: pointer;
  
  &:hover {
    background: var(--surface-section);
    transform: translateX(2px);
  }
}

// Results Card
.results-card {
  ::ng-deep .p-card {
    min-height: 500px;
  }
}

// Overall Score Section
.overall-score {
  background: linear-gradient(135deg, var(--primary-50), var(--primary-100));
  
  :host-context(.app-dark) & {
    background: linear-gradient(135deg, 
      rgba(var(--primary-500-rgb), 0.1), 
      rgba(var(--primary-500-rgb), 0.2)
    );
  }
}

// Criterion Cards
.criterion-card {
  background: var(--surface-card);
  border-color: var(--surface-border);
  transition: all 0.3s ease;
  
  &:hover {
    box-shadow: var(--card-shadow-hover);
    border-color: var(--primary-200);
  }
}

// Progress Bar Customizations
::ng-deep .p-progressbar {
  background: var(--surface-ground);
  border-radius: var(--border-radius);
  
  .p-progressbar-value {
    background: linear-gradient(90deg, var(--primary-color), var(--primary-500));
    border-radius: var(--border-radius);
    transition: width 0.6s ease;
  }
  
  &.h-3 {
    height: 0.75rem;
  }
  
  &.playback-progress {
    background: var(--surface-200);
    
    .p-progressbar-value {
      background: linear-gradient(90deg, var(--purple-500), var(--purple-600));
    }
  }
}

// Loading Spinner
.loading-spinner {
  width: 3rem;
  height: 3rem;
  margin: 0 auto;
  border: 3px solid var(--surface-border);
  border-top: 3px solid var(--primary-color);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

// Strength and Improvement Cards
.strength-card {
  background: var(--green-50);
  border-color: var(--green-400);
  
  :host-context(.app-dark) & {
    background: rgba(34, 197, 94, 0.1);
    border-color: rgba(34, 197, 94, 0.4);
  }
}

.improvement-card {
  background: var(--orange-50);
  border-color: var(--orange-400);
  
  :host-context(.app-dark) & {
    background: rgba(249, 115, 22, 0.1);
    border-color: rgba(249, 115, 22, 0.4);
  }
  
  &.danger {
    background: var(--red-50);
    border-color: var(--red-400);
    
    :host-context(.app-dark) & {
      background: rgba(239, 68, 68, 0.1);
      border-color: rgba(239, 68, 68, 0.4);
    }
  }
}

// Reading Analysis Specific Styles
.reading-analysis {
  &.success {
    background: var(--green-50);
    border-color: var(--green-200);
    
    :host-context(.app-dark) & {
      background: rgba(34, 197, 94, 0.1);
      border-color: rgba(34, 197, 94, 0.3);
    }
  }
  
  &.danger {
    background: var(--red-50);
    border-color: var(--red-200);
    
    :host-context(.app-dark) & {
      background: rgba(239, 68, 68, 0.1);
      border-color: rgba(239, 68, 68, 0.3);
    }
  }
}

// Card customizations
::ng-deep .p-card {
  background: var(--surface-card);
  border: 1px solid var(--surface-border);
  border-radius: var(--border-radius);
  box-shadow: var(--card-shadow);
  transition: all 0.3s ease;
  
  .p-card-header {
    background: var(--surface-section);
    color: var(--text-color);
    font-weight: 600;
    border-bottom: 1px solid var(--surface-border);
    padding: 1rem 1.5rem;
    font-size: 0.95rem;
  }
  
  .p-card-body {
    background: var(--surface-card);
    padding: 1.5rem;
  }
  
  .p-card-content {
    padding: 0;
  }
}

// Button customizations
::ng-deep .p-button {
  transition: all 0.3s ease;
  
  &.w-full {
    width: 100%;
    justify-content: center;
  }
  
  &:hover:not(:disabled) {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }
  
  &.animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
}

// Form controls
::ng-deep .p-select,
::ng-deep .p-inputtext,
::ng-deep .p-textarea {
  width: 100%;
  
  .p-select-label,
  .p-inputtext,
  .p-textarea {
    background: var(--surface-card);
    border: 1px solid var(--surface-border);
    color: var(--text-color);
    
    &:focus {
      border-color: var(--primary-color);
      box-shadow: 0 0 0 0.2rem var(--primary-100);
    }
  }
}

// Tag customizations
::ng-deep .p-tag {
  font-weight: 500;
  
  &.font-medium {
    font-weight: 600;
  }
}

// Message styling
::ng-deep .p-message {
  margin: 0;
  
  &.p-message-error {
    background: var(--red-50);
    border: 1px solid var(--red-200);
    color: var(--red-700);
    
    :host-context(.app-dark) & {
      background: rgba(239, 68, 68, 0.1);
      border-color: rgba(239, 68, 68, 0.3);
      color: var(--red-400);
    }
  }
}

// Divider styling
::ng-deep .p-divider {
  &.p-divider-horizontal {
    margin: 1.5rem 0;
    
    &:before {
      background: var(--surface-border);
    }
  }
}

// Text utilities
.line-height-3 {
  line-height: 1.6;
}

.break-words {
  word-wrap: break-word;
  overflow-wrap: break-word;
}

// Color utilities
.text-green-600 { color: var(--green-600); }
.text-yellow-600 { color: var(--yellow-600); }
.text-red-600 { color: var(--red-600); }
.text-green-700 { color: var(--green-700); }
.text-green-800 { color: var(--green-800); }
.text-orange-700 { color: var(--orange-700); }
.text-orange-800 { color: var(--orange-800); }
.text-red-700 { color: var(--red-700); }
.text-red-800 { color: var(--red-800); }
.text-primary-800 { color: var(--primary-800); }

// Background utilities
.bg-green-50 { background: var(--green-50); }
.bg-orange-50 { background: var(--orange-50); }
.bg-red-50 { background: var(--red-50); }
.bg-primary-50 { background: var(--primary-50); }

// Border utilities
.border-green-400 { border-color: var(--green-400); }
.border-orange-400 { border-color: var(--orange-400); }
.border-red-400 { border-color: var(--red-400); }

// Responsive Design
@media (max-width: 1200px) {
  .evaluator-container {
    padding: 0;
  }
}

@media (max-width: 768px) {
  .evaluator-header {
    text-align: left;
    margin-bottom: 1rem;
    
    h1 {
      font-size: 1.5rem;
    }
    
    p {
      font-size: 0.875rem;
    }
  }
  
  ::ng-deep .p-card {
    .p-card-header {
      padding: 0.75rem 1rem;
      font-size: 0.875rem;
    }
    
    .p-card-body {
      padding: 1rem;
    }
  }
  
  .overall-score {
    .text-4xl {
      font-size: 2.5rem !important;
    }
    
    .text-lg {
      font-size: 1rem !important;
    }
  }
  
  ::ng-deep .p-button {
    &:hover:not(:disabled) {
      transform: none;
    }
  }
}

@media (max-width: 480px) {
  .recording-container {
    padding: 1rem !important;
  }
  
  .flex-wrap {
    .p-button {
      width: 100%;
      margin-bottom: 0.5rem;
    }
  }
}

// Custom CSS variables for theme consistency
:host {
  --card-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);
  --card-shadow-hover: 0 4px 20px 0 rgba(0, 0, 0, 0.15);
  
  // Override in dark mode
  &.app-dark {
    --card-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.3);
    --card-shadow-hover: 0 4px 20px 0 rgba(0, 0, 0, 0.4);
  }
}