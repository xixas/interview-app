.interview-container {
  padding: 0;
  max-width: 100%;
  min-height: calc(100vh - 8rem);
}

.interview-header {
  text-align: center;
  margin-bottom: 2rem;
  
  h1 {
    color: var(--text-color);
    margin: 0 0 0.5rem 0;
    font-weight: 700;
  }
  
  p {
    color: var(--text-color-secondary);
    margin: 0;
    font-size: 1rem;
  }
}

// Setup Phase Styles
.setup-phase {
  .interview-header {
    margin-bottom: 1.5rem;
  }
  
  ::ng-deep .p-card {
    height: 100%;
    
    .p-card-body {
      display: flex;
      flex-direction: column;
      height: 100%;
    }
    
    .p-card-content {
      flex: 1;
    }
  }
  
  // Form styling
  label {
    color: var(--text-color);
    font-weight: 500;
  }
  
  .p-checkbox {
    margin-right: 0.5rem;
  }
  
  // Question difficulty breakdown cards
  .bg-green-50 {
    background: var(--green-50);
    
    :host-context(.app-dark) & {
      background: rgba(34, 197, 94, 0.1);
    }
  }
  
  .bg-blue-50 {
    background: var(--blue-50);
    
    :host-context(.app-dark) & {
      background: rgba(59, 130, 246, 0.1);
    }
  }
  
  .bg-orange-50 {
    background: var(--orange-50);
    
    :host-context(.app-dark) & {
      background: rgba(249, 115, 22, 0.1);
    }
  }
  
  .border-green-200 {
    border-color: var(--green-200);
    
    :host-context(.app-dark) & {
      border-color: rgba(34, 197, 94, 0.3);
    }
  }
  
  .border-blue-200 {
    border-color: var(--blue-200);
    
    :host-context(.app-dark) & {
      border-color: rgba(59, 130, 246, 0.3);
    }
  }
  
  .border-orange-200 {
    border-color: var(--orange-200);
    
    :host-context(.app-dark) & {
      border-color: rgba(249, 115, 22, 0.3);
    }
  }
}

// Interview Phase Styles
.interview-phase {
  .question-text {
    background: var(--surface-section);
    border: 1px solid var(--surface-border);
    border-radius: var(--border-radius);
    padding: 1.5rem;
    margin-bottom: 1rem;
    
    p {
      margin: 0;
      line-height: 1.6;
    }
  }
  
  ::ng-deep .p-textarea {
    font-family: inherit;
    resize: vertical;
    min-height: 120px;
  }
  
  .progress-sidebar {
    ::ng-deep .p-card {
      .p-card-header {
        padding: 1rem 1.5rem 0.5rem;
        font-size: 0.875rem;
        font-weight: 600;
      }
      
      .p-card-body {
        padding: 0.5rem 1.5rem 1.5rem;
      }
    }
  }
}

// Results Phase Styles
.results-phase {
  .loading-spinner {
    width: 3rem;
    height: 3rem;
    border: 3px solid var(--surface-border);
    border-top: 3px solid var(--primary-color);
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }
  
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  
  .score-display {
    .score-value {
      font-size: 3rem;
      font-weight: 800;
      line-height: 1;
      background: linear-gradient(135deg, var(--primary-color), var(--primary-600));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }
  }
  
  .performance-tags {
    .strength-tag {
      background: var(--green-50);
      color: var(--green-700);
      border: 1px solid var(--green-200);
      
      :host-context(.app-dark) & {
        background: rgba(34, 197, 94, 0.1);
        color: var(--green-400);
        border-color: rgba(34, 197, 94, 0.3);
      }
    }
    
    .improvement-tag {
      background: var(--orange-50);
      color: var(--orange-700);
      border: 1px solid var(--orange-200);
      
      :host-context(.app-dark) & {
        background: rgba(249, 115, 22, 0.1);
        color: var(--orange-400);
        border-color: rgba(249, 115, 22, 0.3);
      }
    }
  }
  
  .recommendation-item {
    border-left: 3px solid var(--primary-color);
    background: var(--surface-hover);
    border-radius: 0 var(--border-radius) var(--border-radius) 0;
    transition: all 0.3s ease;
    
    &:hover {
      background: var(--surface-section);
      transform: translateX(2px);
    }
  }
}

// Card customizations
::ng-deep .p-card {
  background: var(--surface-card);
  border: 1px solid var(--surface-border);
  border-radius: var(--border-radius);
  box-shadow: var(--card-shadow);
  transition: all 0.3s ease;
  
  .p-card-header {
    background: var(--surface-section);
    color: var(--text-color);
    font-weight: 600;
    border-bottom: 1px solid var(--surface-border);
    padding: 1rem 1.5rem;
    font-size: 0.95rem;
  }
  
  .p-card-body {
    background: var(--surface-card);
    padding: 1.5rem;
  }
  
  .p-card-content {
    padding: 0;
  }
}

// Button customizations
::ng-deep .p-button {
  transition: all 0.3s ease;
  
  &.w-full {
    width: 100%;
    justify-content: center;
  }
  
  &:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }
  
  &:disabled {
    transform: none;
    box-shadow: none;
  }
}

// Dialog customizations
::ng-deep .p-dialog {
  .p-dialog-header {
    background: var(--surface-card);
    color: var(--text-color);
    border-bottom: 1px solid var(--surface-border);
  }
  
  .p-dialog-content {
    background: var(--surface-card);
    color: var(--text-color);
  }
}

// Progress bar customizations
::ng-deep .p-progressbar {
  background: var(--surface-ground);
  border-radius: var(--border-radius);
  
  .p-progressbar-value {
    background: linear-gradient(90deg, var(--primary-color), var(--primary-500));
    border-radius: var(--border-radius);
    transition: width 0.6s ease;
  }
  
  &.h-2 {
    height: 0.5rem;
  }
}

// Tag customizations
::ng-deep .p-tag {
  font-weight: 500;
  font-size: 0.75rem;
  
  &.size-small {
    font-size: 0.65rem;
    padding: 0.25rem 0.5rem;
  }
}

// Select and form controls
::ng-deep .p-select,
::ng-deep .p-inputnumber,
::ng-deep .p-textarea {
  width: 100%;
  
  .p-select-label,
  .p-inputnumber-input,
  .p-textarea {
    background: var(--surface-card);
    border: 1px solid var(--surface-border);
    color: var(--text-color);
    
    &:focus {
      border-color: var(--primary-color);
      box-shadow: 0 0 0 0.2rem var(--primary-100);
    }
  }
}

// Checkbox styling
::ng-deep .p-checkbox {
  .p-checkbox-box {
    background: var(--surface-card);
    border: 1px solid var(--surface-border);
    
    &.p-highlight {
      background: var(--primary-color);
      border-color: var(--primary-color);
    }
    
    &:focus {
      box-shadow: 0 0 0 0.2rem var(--primary-100);
    }
  }
  
  .p-checkbox-icon {
    color: var(--primary-contrast-color);
  }
}

// Message styling
::ng-deep .p-message {
  margin: 0;
  
  &.p-message-error {
    background: var(--red-50);
    border: 1px solid var(--red-200);
    color: var(--red-700);
    
    :host-context(.app-dark) & {
      background: rgba(239, 68, 68, 0.1);
      border-color: rgba(239, 68, 68, 0.3);
      color: var(--red-400);
    }
  }
}

// Responsive Design
@media (max-width: 1024px) {
  .interview-container {
    padding: 0;
  }
  
  .interview-header {
    margin-bottom: 1rem;
    
    h1 {
      font-size: 1.5rem;
    }
  }
  
  .setup-phase {
    .interview-header {
      margin-bottom: 1rem;
    }
  }
}

@media (max-width: 768px) {
  .interview-header {
    text-align: left;
    
    h1 {
      font-size: 1.25rem;
    }
    
    p {
      font-size: 0.875rem;
    }
  }
  
  ::ng-deep .p-card {
    .p-card-header {
      padding: 0.75rem 1rem;
      font-size: 0.875rem;
    }
    
    .p-card-body {
      padding: 1rem;
    }
  }
  
  .question-text {
    padding: 1rem !important;
    
    p {
      font-size: 1rem !important;
    }
  }
  
  ::ng-deep .p-button {
    &:hover {
      transform: none;
    }
  }
}

// Animation utilities
.animate-spin {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

// Loading state
.loading-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 300px;
  color: var(--text-color-secondary);
  
  .loading-spinner {
    margin-bottom: 1rem;
  }
}

// Custom CSS variables for theme consistency
:host {
  --card-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);
  --card-shadow-hover: 0 4px 20px 0 rgba(0, 0, 0, 0.15);
  
  // Override in dark mode
  &.app-dark {
    --card-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.3);
    --card-shadow-hover: 0 4px 20px 0 rgba(0, 0, 0, 0.4);
  }
}