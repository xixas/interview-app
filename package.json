{
  "name": "@interview-app/source",
  "version": "1.0.0",
  "license": "MIT",
  "description": "AI-powered mock interview practice application",
  "author": {
    "name": "Vikas Kyatannwar",
    "email": "vikas.k@osmosys.co"
  },
  "homepage": "https://github.com/osmosys/interview-app",
  "scripts": {
    "postinstall": "electron-builder install-app-deps",
    "nxe:build:frontend": "nx build ui",
    "nxe:build:backend": "nx build electron",
    "nxe:serve:frontend": "nx serve ui",
    "nxe:serve:backend": "nx serve electron",
    "nxe:package:app": "nx run electron:make --prepackageOnly",
    "nxe:make:app": "nx run electron:make",
    "serve:api": "nx serve api",
    "serve:evaluator": "nx serve evaluator",
    "build:api": "nx build api",
    "build:evaluator": "nx build evaluator",
    "migration:run:history": "cd api && npx ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:run -d src/user-history-data-source.ts",
    "migration:revert:history": "cd api && npx ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:revert -d src/user-history-data-source.ts",
    "build": "nx run-many -t build --projects=ui,api,evaluator,electron",
    "build:electron": "nx build ui --configuration=electron && nx build api && nx build evaluator && nx build electron",
    "build:appimage": "npm run build:electron && npm run package:appimage",
    "package:appimage": "electron-builder --linux AppImage",
    "package:all-platforms": "electron-builder --linux --win --mac",
    "package:win": "electron-builder --win",
    "package:mac": "electron-builder --mac",
    "docker:build:all": "docker run --rm --env ELECTRON_CACHE=/root/.cache/electron --env ELECTRON_BUILDER_CACHE=/root/.cache/electron-builder -v $(pwd):/project -v $(pwd)-node-modules:/project/node_modules -v ~/.cache/electron:/root/.cache/electron -v ~/.cache/electron-builder:/root/.cache/electron-builder electronuserland/builder:wine /bin/bash -c \"cd /project && npm install && npm run package:all-platforms\"",
    "docker:build:win": "docker run --rm --env ELECTRON_CACHE=/root/.cache/electron --env ELECTRON_BUILDER_CACHE=/root/.cache/electron-builder -v $(pwd):/project -v $(pwd)-node-modules:/project/node_modules -v ~/.cache/electron:/root/.cache/electron -v ~/.cache/electron-builder:/root/.cache/electron-builder electronuserland/builder:wine /bin/bash -c \"cd /project && npm install && npm run package:win\"",
    "docker:build:mac": "docker run --rm --env ELECTRON_CACHE=/root/.cache/electron --env ELECTRON_BUILDER_CACHE=/root/.cache/electron-builder -v $(pwd):/project -v $(pwd)-node-modules:/project/node_modules -v ~/.cache/electron:/root/.cache/electron -v ~/.cache/electron-builder:/root/.cache/electron-builder electronuserland/builder:wine /bin/bash -c \"cd /project && npm install && npm run package:mac\"",
    "test": "nx run-many -t test --all",
    "lint": "nx run-many -t lint --all",
    "dev": "concurrently \"npm run serve:api\" \"npm run serve:evaluator\" \"npm run nxe:serve:frontend\"",
    "dev:electron": "concurrently \"npm run serve:api\" \"npm run serve:evaluator\" \"npm run nxe:serve:frontend\" \"wait-on http://localhost:3002 && npm run nxe:serve:backend\""
  },
  "private": true,
  "devDependencies": {
    "@angular-devkit/core": "~20.1.0",
    "@angular-devkit/schematics": "~20.1.0",
    "@angular/build": "~20.1.0",
    "@angular/cli": "~20.1.0",
    "@angular/compiler-cli": "~20.1.0",
    "@angular/language-service": "~20.1.0",
    "@eslint/js": "^9.8.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.0",
    "@nx/angular": "^21.3.11",
    "@nx/devkit": "21.3.11",
    "@nx/eslint": "21.3.11",
    "@nx/eslint-plugin": "21.3.11",
    "@nx/jest": "21.3.11",
    "@nx/js": "21.3.11",
    "@nx/nest": "^21.3.11",
    "@nx/node": "^21.3.11",
    "@nx/playwright": "21.3.11",
    "@nx/web": "21.3.11",
    "@nx/webpack": "21.3.11",
    "@nx/workspace": "21.3.11",
    "@playwright/test": "^1.36.0",
    "@schematics/angular": "~20.1.0",
    "@swc-node/register": "~1.9.1",
    "@swc/core": "~1.5.7",
    "@swc/helpers": "~0.5.11",
    "@tailwindcss/postcss": "^4.1.11",
    "@types/jest": "^30.0.0",
    "@types/node": "18.16.9",
    "@typescript-eslint/utils": "^8.29.0",
    "angular-eslint": "^20.0.0",
    "autoprefixer": "^10.4.20",
    "concurrently": "^9.2.0",
    "electron": "^34.5.6",
    "electron-builder": "^24.13.3",
    "eslint": "^9.8.0",
    "eslint-config-prettier": "^10.0.0",
    "eslint-plugin-playwright": "^1.6.2",
    "jest": "^30.0.2",
    "jest-environment-jsdom": "^30.0.2",
    "jest-environment-node": "^30.0.2",
    "jest-preset-angular": "~15.0.0",
    "jest-util": "^30.0.2",
    "jsonc-eslint-parser": "^2.1.0",
    "nx": "21.3.11",
    "nx-electron": "^21.0.1",
    "postcss": "^8.5.6",
    "prettier": "^2.6.2",
    "tailwindcss": "^4.1.11",
    "tailwindcss-primeui": "^0.6.1",
    "ts-jest": "^29.4.0",
    "ts-node": "10.9.1",
    "tslib": "^2.3.0",
    "typescript": "~5.8.2",
    "typescript-eslint": "^8.29.0",
    "wait-on": "^8.0.4",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "@angular/animations": "~20.1.0",
    "@angular/common": "~20.1.0",
    "@angular/compiler": "~20.1.0",
    "@angular/core": "~20.1.0",
    "@angular/forms": "~20.1.0",
    "@angular/platform-browser": "~20.1.0",
    "@angular/platform-browser-dynamic": "~20.1.0",
    "@angular/router": "~20.1.0",
    "@nestjs/common": "^11.0.0",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.0",
    "@nestjs/platform-express": "^11.0.0",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/typeorm": "^11.0.0",
    "@primeuix/themes": "^1.2.3",
    "@types/multer": "^2.0.0",
    "axios": "^1.6.0",
    "body-parser": "^2.2.0",
    "chart.js": "^4.5.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "multer": "^2.0.2",
    "openai": "^5.12.1",
    "primeicons": "^7.0.0",
    "primeng": "^20.0.1",
    "reflect-metadata": "^0.1.13",
    "rxjs": "~7.8.0",
    "sqlite3": "^5.1.7",
    "typeorm": "^0.3.25",
    "zone.js": "~0.15.0"
  },
  "nx": {
    "includedScripts": []
  },
  "build": {
    "productName": "Interview App",
    "appId": "com.osmosys.interview-app",
    "directories": {
      "buildResources": "build-resources",
      "output": "release"
    },
    "npmRebuild": false,
    "buildDependenciesFromSource": false,
    "nodeGypRebuild": false,
    "asar": true,
    "asarUnpack": [
      "**/node_modules/sqlite3/**/*"
    ],
    "includeSubNodeModules": true,
    "files": [
      {
        "from": "dist/electron",
        "to": ".",
        "filter": ["**/*"]
      },
      {
        "from": "dist/ui/browser",
        "to": "ui", 
        "filter": ["**/*"]
      },
      {
        "from": "node_modules/sqlite3",
        "to": "node_modules/sqlite3",
        "filter": ["**/*"]
      }
    ],
    "extraResources": [
      {
        "from": "dist/api",
        "to": "app/dist/api",
        "filter": [
          "**/*"
        ]
      },
      {
        "from": "dist/evaluator",
        "to": "app/dist/evaluator",
        "filter": [
          "**/*"
        ]
      },
      {
        "from": "api/src/assets/questions.db",
        "to": "assets/questions.db"
      }
    ],
    "linux": {
      "target": [
        {
          "target": "AppImage",
          "arch": [
            "x64"
          ]
        }
      ],
      "category": "Development",
      "icon": "build-resources/icon.png",
      "desktop": {
        "Name": "Interview App",
        "Comment": "AI-powered mock interview practice application",
        "Categories": "Development;Education;",
        "Keywords": "interview;practice;ai;education;",
        "StartupNotify": "true"
      }
    },
    "win": {
      "target": [
        {
          "target": "nsis",
          "arch": [
            "x64"
          ]
        }
      ],
      "icon": "build-resources/icon.ico"
    },
    "mac": {
      "target": [
        {
          "target": "dmg",
          "arch": [
            "x64",
            "arm64"
          ]
        }
      ],
      "icon": "build-resources/icon.icns",
      "category": "public.app-category.developer-tools"
    }
  }
}
